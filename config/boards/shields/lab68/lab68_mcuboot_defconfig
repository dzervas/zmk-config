# The UART is used for Serial Recovery, so logging requires
# an RTT console, which is not available out of the box on this board.
CONFIG_LOG=n
CONFIG_DEBUG=n

CONFIG_FLASH=y
CONFIG_FLASH_PAGE_LAYOUT=y
CONFIG_FLASH_MAP=y

# The build won't fit on the partition allocated for it without size
# optimizations.
CONFIG_SIZE_OPTIMIZATIONS=y

# Serial
CONFIG_SERIAL=y
CONFIG_UART_NRFX=y
CONFIG_UART_INTERRUPT_DRIVEN=y
CONFIG_UART_LINE_CTRL=y
CONFIG_UART_CONSOLE=n

# MCUBoot serial
CONFIG_GPIO=y
CONFIG_MCUBOOT_SERIAL=y
CONFIG_BOOT_SERIAL_CDC_ACM=y
CONFIG_BOOT_SERIAL_DETECT_PORT="GPIO_0"
CONFIG_BOOT_SERIAL_DETECT_PIN=11
# CONFIG_MCUBOOT_INDICATION_LED=y

# Required by USB
CONFIG_MULTITHREADING=y

# USB
CONFIG_USB=y
CONFIG_USB_DEVICE_STACK=y
CONFIG_USB_DEVICE_PRODUCT="Lab68 MCUBoot"
CONFIG_USB_CDC_ACM=y
CONFIG_USB_COMPOSITE_DEVICE=n
CONFIG_USB_MASS_STORAGE=n
CONFIG_USB_DEVICE_PID=0x0135
CONFIG_USB_DEVICE_VID=0x1FC9

# Signing
CONFIG_BOOT_SIGNATURE_TYPE_RSA=n
CONFIG_BOOT_SIGNATURE_TYPE_ED25519=y
CONFIG_BOOT_SIGNATURE_KEY_FILE="signing-key-ed25519.pem"
CONFIG_MCUBOOT_SIGNATURE_KEY_FILE="mcuboot/signing-key-ed25519.pem"

# Maybe in the feature use DFU instead of CDC ACM?
# CONFIG_BOOT_USB_DFU_NO=n
# CONFIG_BOOT_USB_DFU_WAIT=n
# CONFIG_BOOT_USB_DFU_GPIO=y
# CONFIG_BOOT_USB_DFU_DETECT_PORT="GPIO_0"
# CONFIG_BOOT_USB_DFU_DETECT_PIN=11
