/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include "lab68_mcuboot.overlay"

/ {
	model = "lab68";
	compatible = "dzervas,lab68";

	chosen {
		zmk,kscan = &kscan;
		zmk,matrix_transform = &default_transform;
		zmk,battery = &vbatt;
		// zephyr,console = &cdc_acm_uart;
		zephyr,display = &oled;
		zephyr,code-partition = &slot0_partition;
	};

	ext-power {
		compatible = "zmk,ext-power-generic";
		label = "EXT_POWER";
		init-delay-ms = <50>;
		control-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;
	};

	sky13351 {
		compatible = "skyworks,sky13351";
		vctl1-gpios = <&gpio0 24 GPIO_ACTIVE_LOW>;
		vctl2-gpios = <&gpio0 25 GPIO_ACTIVE_LOW>;
	};

	vbatt: vbatt {
		compatible = "zmk,battery-voltage-divider";
		io-channels = <&adc 3>;
		output-ohms = <2000000>;
		full-ohms = <(2000000 + 806000)>;
	};

	kscan: kscan0 {
		compatible = "zmk,kscan-composite";
		rows = <5>;
		columns = <16>;

		matrix: matrix {
			kscan = <&matrix_kscan>;
		};

		encoder: encoder {
			kscan = <&encoder_kscan>;
			column-offset = <15>;
		};
	};

	matrix_kscan: kscan1 {
		compatible = "zmk,kscan-gpio-matrix";
		diode-direction = "col2row";

		col-gpios
			= <&mcp_io 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			, <&mcp_io 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
			;
		row-gpios
			= <&gpio1 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
	};

	encoder_kscan: kscan2 {
		compatible = "zmk,kscan-gpio-direct";
		debounce-period = <50>;
		label = "ENCODER_KSCAN";
		input-gpios
			= <&gpio0 29 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <16>;
		rows = <5>;

		//TODO: Add a keymap graphic here

		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8)  RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0, 15)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8)  RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8)  RC(2,9) RC(2,10) RC(2,11)          RC(2,13) RC(2,14)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8)  RC(3,9) RC(3,10) RC(3,11)          RC(3,13) RC(3,14)
RC(4,0) RC(4,1) RC(4,2)                 RC(4,5)                 RC(4,8)  RC(4,9) RC(4,10) RC(4,11)          RC(4,13) RC(4,14)
		>;
	};


	encoder0: encoder0 {
		compatible = "alps,ec11";
		label = "MAIN_ENCODER";
		a-gpios = <&gpio0 30 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 31 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		resolution = <2>;
	};
};

&i2c0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
	compatible = "nordic,nrf-twim";
	zephyr,concat-buf-size = <2048>;

	mcp_io: mcp23017@20 {
		compatible = "microchip,mcp230xx";
		status = "okay";
		reg = <0x20>;
		// label = "MCP_IO";

		gpio-controller;
		#gpio-cells = <2>;
		ngpios = <16>;
	};

	oled: ssd1306@3c {
		compatible = "solomon,ssd1306fb";
		status = "okay";
		reg = <0x3c>;
		label = "DISPLAY";

		width = <128>;
		height = <32>;
		segment-offset = <0>;
		page-offset = <0>;
		display-offset = <0>;
		multiplex-ratio = <31>;
		com-invdir;
		segment-remap;
		com-sequential;
		prechargep = <0x22>;
	};
};

&adc {
	status = "okay";
};

&encoder0 {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

/delete-node/ &cdc_acm_uart;

&usbd {
	status = "okay";
};
