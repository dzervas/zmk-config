on: [push, workflow_dispatch]

name: Build

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    name: Build
    strategy:
      matrix:
        target_shield:
          - lab68
          - launchpad
    outputs:
      zmk_commit: ${{ steps.get_zmk_commit.outputs.zmk_commit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache west modules
        uses: actions/cache@v2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
            mcuboot/
            !mcuboot/signing-key-ed25519.pem
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('manifest-dir/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: West Init
        run: make init

      - name: Install MCUBoot requirements
        run: make ci_setup
      - name: Write Signing Key
        run: echo "${{ secrets.MCUBOOT_SIGNING_KEY }}" > mcuboot/signing-key-ed25519.pem

      - name: Compile & Sign everything
        run: make all TARGET_SHIELD=${{ matrix.target_shield }}

      - name: ${{ matrix.target_shield }} DTS File
        if: ${{ always() }}
        run: cat -n build-zmk/zephyr/${{ matrix.target_shield }}.dts.pre.tmp || find . -iname particle_xenon.dts.pre.tmp -exec cat -n {} \; -print
      - name: ${{ matrix.target_shield }} Kconfig file
        run: cat build-zmk/zephyr/.config | grep -v "^#" | grep -v "^$"

      - name: Rename files
        run: cp build-mcuboot/zephyr/zephyr.bin mcuboot-${{ matrix.target_shield }}.bin && cp build-mcuboot/zephyr/zephyr.hex mcuboot-${{ matrix.target_shield }}.hex && cp build-zmk/zephyr/zmk.bin zmk-${{ matrix.target_shield }}.bin && cp build-zmk/zephyr/zmk.hex zmk-${{ matrix.target_shield }}.hex
      - name: Archive (${{ matrix.target_shield }})
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: |
            ${{ matrix.target_shield }}.*
            mcuboot-${{ matrix.target_shield }}.*
          if-no-files-found: error

      - name: Get ZMK commit
        id: get_zmk_commit
        run: echo "::set-output name=zmk_commit::$(git --git-dir zmk/.git rev-parse --short HEAD)"

      - name: Archive (${{ matrix.target_shield }})
        uses: actions/upload-artifact@v2
        with:
          name: firmware-${{ matrix.target_shield }}
          path: |
            zmk-${{ matrix.target_shield }}.*
            mcuboot-${{ matrix.target_shield }}.*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ZMK-${{ needs.build.outputs.zmk_commit }}
          tag_name: zmk-${{ needs.build.outputs.zmk_commit }}
          files: |
            zmk-*.*
            mcuboot-*.*
          body: |
            To flash ZMK:
            ```bash
            go install github.com/apache/mynewt-mcumgr-cli/mcumgr@latest
            export SHIELD=<shield name>
            wget https://github.com/dzervas/zmk-config/releases/download/${{ env.ZMK_COMMIT }}/$SHIELD.bin -O /tmp/$SHIELD.bin
            mcumgr --conntype=serial --connstring='dev=/dev/ttyACM0,baud=115200' image upload -e /tmp/$SHIELD.bin
            ```

            To flash mcuboot (connect Particle Debugger and install openocd):
            ```bash
            wget https://github.com/dzervas/zmk-config/raw/main/nrf52-particle.cfg -O /tmp/nrf52-particle.cfg
            export SHIELD=<shield name>
            wget https://github.com/dzervas/zmk-config/releases/download/${{ env.ZMK_COMMIT }}/mcuboot-$SHIELD.hex -O /tmp/mcuboot-$SHIELD.hex
            openocd -f interface/cmsis-dap.cfg -f /tmp/nrf52-particle.cfg -c "init" -c "reset init" -c "halt" -c "program /tmp/mcuboot-$SHIELD.hex 0x0 verify reset" -c "exit"
            ```
